C51 COMPILER V9.60.0.0   INT_DEVICE                                                        06/25/2022 18:40:45 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INT_DEVICE
OBJECT MODULE PLACED IN .\Objects\Int_Device.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Int_Device.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\Int_Device.lst) TABS(2) OBJECT(.\Objects\Int_Device.obj)

line level    source

   1          #ifndef _INT_DEVICE_H
   2          #define _INT_DEVICE_H
   3          #include <MyHeader.h>
   4          
   5          /********* UART Int ***************/
   6          void Int_Uart()
   7          {
   8   1      //  TMOD = 0x20; //use timer 1, 8 bit auto reload
   9   1        TMOD = 0x21; //sets the mode1 of Timer0 used for timing & sets the mode2 of Timer1 used for timing
  10   1        SCON = 0x50; // Mode 1, reception enable 
  11   1        PCON = 0x80; //enable SMOD register
  12   1        TH1 = 0xFD; //19600 baud rate
  13   1        TR1 = 1; //start timer for baud rate generate
  14   1        ES = 1; // enable serial interrupt
  15   1        EA = 1; // enable global interrupt bit
  16   1        
  17   1      /*********Timer0 Enable***********/ 
  18   1        TH0 = 0x4B; // LOAD THE TIMER VALUE
  19   1        TL0 = 0xFD;
  20   1        TR0 = 1; // ENABLE TIMER0 INTERRUPT
  21   1        ET0 = 1;
  22   1      }
  23          
  24          /******** TX Char ****************/
  25          void Tx_char(unsigned char Tx_Data)
  26          {
  27   1        SBUF = Tx_Data;
  28   1        while(TI == 0);
  29   1        TI = 0;
  30   1      }
  31          
  32          /*********TX STRING***************/
  33          void Tx_string(unsigned char *get_data)
  34          {
  35   1        unsigned int addr=0;
  36   1        while(*(get_data+addr)!='\0')
  37   1        {
  38   2          Tx_char(*(get_data+addr));
  39   2          addr++;
  40   2        }
  41   1      }
  42          
  43          /******** RX Char ****************/
  44          //unsigned char Rx_char()
  45          //{
  46          //  unsigned char Rx_Data;
  47          //  while(RI == 0);
  48          //  Rx_Data = SBUF;
  49          //  RI = 0;
  50          //  return(Rx_Data);
  51          //}
  52          
  53          /********PORT 3 init***************/ //DON'T REMOVE. IF REMOVE SERIAL WILL NOT WORK
  54          void Port3_Init() {
C51 COMPILER V9.60.0.0   INT_DEVICE                                                        06/25/2022 18:40:45 PAGE 2   

  55   1        /********input***********/
  56   1      //  PORT3_PIN2 = 1;
  57   1      //  PORT3_PIN3 = 1;
  58   1      //  PORT3_PIN4 = 1;
  59   1      //  PORT3_PIN5 = 1;
  60   1      //  PORT3_PIN6 = 1;
  61   1      //  PORT3_PIN7 = 1;
  62   1        /******OUTPUT******/
  63   1        PORT3_PIN2 = 0;
  64   1        PORT3_PIN3 = 0;
  65   1        PORT3_PIN4 = 0;
  66   1        PORT3_PIN5 = 0;
  67   1        PORT3_PIN6 = 0;
  68   1        PORT3_PIN7 = 0;
  69   1      }
  70          
  71          void Delay(unsigned int itime)
  72          {
  73   1      unsigned int i,j;
  74   1        for (i=0;i<itime;i++) // this is For(); loop delay used to define delay value in Embedded C
  75   1        {
  76   2          for (j=0;j<1275;j++);
  77   2        }
  78   1      }
  79          
  80          /**************** check the port 3 pin status individually  ****************************/
  81          unsigned char PORT3_func() {
  82   1      
  83   1        unsigned char PORT3 = 0x00;
  84   1      //  if (PORT3_PIN0 == 0)
  85   1      //    PORT3 = PORT3 | 0x01; 
  86   1      //  else
  87   1      //    PORT3 = PORT3 & 0xFF;
  88   1      //  if (PORT3_PIN1 == 0)
  89   1      //    PORT3 = PORT3 | 0x02; 
  90   1      //  else
  91   1      //    PORT3 = PORT3 & 0xFF;
  92   1        PORT3 = PORT3 | 0x03;
  93   1        if (PORT3_PIN2 == 0)
  94   1          PORT3 |= 0x04;
  95   1        else
  96   1          PORT3 &= 0xFF; 
  97   1        if (PORT3_PIN3 == 0)
  98   1          PORT3 |= 0x08;
  99   1        else
 100   1          PORT3 = PORT3 & 0xFF;
 101   1        if (PORT3_PIN4 == 0)
 102   1          PORT3 |= 0x10;
 103   1        else
 104   1          PORT3 = PORT3 & 0xFF;
 105   1        if (PORT3_PIN5 == 0)
 106   1          PORT3 |= 0x20;
 107   1        else
 108   1          PORT3 &= 0xFF;
 109   1        if (PORT3_PIN6 == 0)
 110   1          PORT3 |= 0x40;
 111   1        else
 112   1          PORT3 &= 0xFF;
 113   1        if (PORT3_PIN7 == 0)
 114   1          PORT3|= 0x80;
 115   1        else
 116   1          PORT3 &= 0xFF;
C51 COMPILER V9.60.0.0   INT_DEVICE                                                        06/25/2022 18:40:45 PAGE 3   

 117   1      
 118   1        return PORT3;
 119   1      }
 120          
 121          void Transmit_Data()
 122          {
 123   1          TX_Data[0] = IDENTITY_BYTE;
 124   1          TX_Data[1]= START_BYTE;
 125   1          TX_Data[2] = P0;
 126   1          TX_Data[3] = P2;
 127   1          TX_Data[4] = CHECKSUM(TX_Data[2], TX_Data[3]);
 128   1          TX_Data[5] = END_BYTE;
 129   1            Tx_char(TX_Data[0]);
 130   1            Tx_char(TX_Data[1]);
 131   1            Tx_char(TX_Data[2]);
 132   1            Tx_char(TX_Data[3]);
 133   1            Tx_char(TX_Data[4]);
 134   1            Tx_char(TX_Data[5]);
 135   1      }
 136          
 137          void Ports_Init()
 138          {
 139   1          P1 = 0x00; // OUTPUT PORT
 140   1       // P2 = 0x00; // OUTPUT PORT
 141   1        P2 = 0xFF; // INPUT PORT
 142   1        P0 = 0xFF; // INPUT PORT
 143   1        Port3_Init();
 144   1      }
 145          
 146          #endif
 147          
 148          
 149          
 150          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    232    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
